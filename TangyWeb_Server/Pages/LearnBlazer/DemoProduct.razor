@page "/learnBlazer/demoproduct"

<h2 class="text-primary">Demo Product</h2>
<p>Favorites total: @selectedFavoriteCount</p>
<p>Last Selected Product: @lastSelectedProduct</p>
<div class="card-group">
    @foreach (var prod in Products)
    {
        <_ProductCard Product="prod" OnFavoriteUpdated="FavoriteCountUpdate" OnSelectionUpdated="LastSelectedUpdate">
            <FirstFragment>#1</FirstFragment>
            <SecondFragment>#2</SecondFragment>
        </_ProductCard>
    }
</div>

@code {
    private int selectedFavoriteCount { get; set; } = 0;
    private string lastSelectedProduct { get; set; } = "";

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 8.99,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
            }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 5.06,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp { Id = 3, Key = "Color", Value = "White"}
            }
            });
    }

    protected void FavoriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            selectedFavoriteCount++;
        }
        else
        {
            selectedFavoriteCount--;
        }
    }

    protected void LastSelectedUpdate(string productName)
    {
        lastSelectedProduct = productName;
    }
}
