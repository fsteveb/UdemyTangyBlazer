@page "/learnBlazer/blazerJS"
@inject IJSRuntime _JSRuntime

<h3>BlazerJS</h3>

<div class="row">
    <button class="btn btn-secondary m-3" style="width: 200px;" @onclick="TestConfirmBox">Test Confirm Box</button>
</div>
<div class="row">
    <button class="btn btn-success m-3" style="width: 200px;" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger m-3 ms-3" style="width: 200px;" @onclick="ToastrFailure">Toastr Failure</button>
</div>
<br />
<div class="row">
    <button class="btn btn-success m-3" style="width: 100px;" @onclick="SweetAlertSuccess">SweetAlert Success</button>
    <button class="btn btn-danger m-3 ms-3" style="width: 100px;" @onclick="SweetAlertFailure">SweetAlert Failure</button>
</div>

<div class="row">
    @if(ConfirmResult)
    {
        <p>Confirmation has been made!</p>
    }
    else
    {
        <p>Confirmation pending!</p>
    }
</div>

@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult;

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JSRuntime.ToastrSuccess("Operation Successful");
    }

    private async Task ToastrFailure()
    {
        await _JSRuntime.ToastrError("Operation Failed");
    }

    private async Task SweetAlertSuccess()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSwal", "success", "Task Completed Successfully");
    }

    private async Task SweetAlertFailure()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSwal", "error", "Task failed");
    }
}
